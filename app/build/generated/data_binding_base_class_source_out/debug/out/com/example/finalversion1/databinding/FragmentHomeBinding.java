// Generated by view binder compiler. Do not edit!
package com.example.finalversion1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalversion1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonupdate;

  @NonNull
  public final EditText updatebmi;

  @NonNull
  public final EditText updatefruit;

  @NonNull
  public final EditText updategeneral;

  @NonNull
  public final EditText updatemental;

  @NonNull
  public final EditText updatemyactivity;

  @NonNull
  public final EditText updatephysical;

  @NonNull
  public final EditText updatevegetables;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull Button buttonupdate,
      @NonNull EditText updatebmi, @NonNull EditText updatefruit, @NonNull EditText updategeneral,
      @NonNull EditText updatemental, @NonNull EditText updatemyactivity,
      @NonNull EditText updatephysical, @NonNull EditText updatevegetables) {
    this.rootView = rootView;
    this.buttonupdate = buttonupdate;
    this.updatebmi = updatebmi;
    this.updatefruit = updatefruit;
    this.updategeneral = updategeneral;
    this.updatemental = updatemental;
    this.updatemyactivity = updatemyactivity;
    this.updatephysical = updatephysical;
    this.updatevegetables = updatevegetables;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonupdate;
      Button buttonupdate = ViewBindings.findChildViewById(rootView, id);
      if (buttonupdate == null) {
        break missingId;
      }

      id = R.id.updatebmi;
      EditText updatebmi = ViewBindings.findChildViewById(rootView, id);
      if (updatebmi == null) {
        break missingId;
      }

      id = R.id.updatefruit;
      EditText updatefruit = ViewBindings.findChildViewById(rootView, id);
      if (updatefruit == null) {
        break missingId;
      }

      id = R.id.updategeneral;
      EditText updategeneral = ViewBindings.findChildViewById(rootView, id);
      if (updategeneral == null) {
        break missingId;
      }

      id = R.id.updatemental;
      EditText updatemental = ViewBindings.findChildViewById(rootView, id);
      if (updatemental == null) {
        break missingId;
      }

      id = R.id.updatemyactivity;
      EditText updatemyactivity = ViewBindings.findChildViewById(rootView, id);
      if (updatemyactivity == null) {
        break missingId;
      }

      id = R.id.updatephysical;
      EditText updatephysical = ViewBindings.findChildViewById(rootView, id);
      if (updatephysical == null) {
        break missingId;
      }

      id = R.id.updatevegetables;
      EditText updatevegetables = ViewBindings.findChildViewById(rootView, id);
      if (updatevegetables == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, buttonupdate, updatebmi,
          updatefruit, updategeneral, updatemental, updatemyactivity, updatephysical,
          updatevegetables);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
