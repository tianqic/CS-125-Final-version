// Generated by view binder compiler. Do not edit!
package com.example.finalversion1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.finalversion1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResultdisplayBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button googleSearchButton;

  @NonNull
  public final TextView result;

  @NonNull
  public final ConstraintLayout resultdisplay;

  @NonNull
  public final Button returnbutton;

  @NonNull
  public final ScrollView scrollView3;

  private ResultdisplayBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button googleSearchButton, @NonNull TextView result,
      @NonNull ConstraintLayout resultdisplay, @NonNull Button returnbutton,
      @NonNull ScrollView scrollView3) {
    this.rootView = rootView;
    this.googleSearchButton = googleSearchButton;
    this.result = result;
    this.resultdisplay = resultdisplay;
    this.returnbutton = returnbutton;
    this.scrollView3 = scrollView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ResultdisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResultdisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.resultdisplay, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResultdisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.googleSearchButton;
      Button googleSearchButton = ViewBindings.findChildViewById(rootView, id);
      if (googleSearchButton == null) {
        break missingId;
      }

      id = R.id.result;
      TextView result = ViewBindings.findChildViewById(rootView, id);
      if (result == null) {
        break missingId;
      }

      ConstraintLayout resultdisplay = (ConstraintLayout) rootView;

      id = R.id.returnbutton;
      Button returnbutton = ViewBindings.findChildViewById(rootView, id);
      if (returnbutton == null) {
        break missingId;
      }

      id = R.id.scrollView3;
      ScrollView scrollView3 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView3 == null) {
        break missingId;
      }

      return new ResultdisplayBinding((ConstraintLayout) rootView, googleSearchButton, result,
          resultdisplay, returnbutton, scrollView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
